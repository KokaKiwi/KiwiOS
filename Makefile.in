# [Variables]
# +[Executables]
CC					:= @CC@
LD					:= @LD@
RM					:= @RM@
AS 					:= @AS@
GRUB_MKRESCUE 		:= @GRUB_MKRESCUE@
QEMU				:= @QEMU@
# +[/Executables]
# +[Arguments]
CFLAGS				+= -m32 -nostdlib -nostartfiles -nostdinc
CFLAGS				+= -fno-builtin -fno-stack-protector -Iinclude
CFLAGS 				+= @CFLAGS_WALL@ @CFLAGS_DEBUG@
CCFLAGS				+= -c $(CFLAGS)
CAFLAGS				+= -S $(CFLAGS)
LDFLAGS				+=
RMFLAGS				+= -rf
ASFLAGS				+=
QEMUARGS			+= -m 32 -vga std
# +[/Arguments]
# +[Console]
BEG					:= utils/mk-beg
BEGRM				:= utils/mk-beg-rm
END					:= utils/mk-end
ENDRM				:= utils/mk-end-rm
INFO				:= utils/mk-info
ERROR				:= utils/mk-error
ERRORS 				:= 2>> /tmp/.`whoami`-build-errors || utils/mk-error
# +[/Console]
# +[Compilation]
BUILDDIR			:= target
BINDIR				:= $(BUILDDIR)/bin

NAME				:= kiwios.iso

O 					:= .@OBJEXT@
# +[/Compilation]
# +[Files]
CSRCS				:= $(shell find src -name "*.c" -type f)
COBJS				:= $(CSRCS:.c=$O)
CASMS				:= $(CSRCS:.c=.s)
HSRCS				:= $(shell find include -name "*.h" -type f)
ASRCS				:= $(filter-out $(CASMS), $(shell find src -name "*.s" -type f))
AOBJS				:= $(ASRCS:.s=$O)
OBJS				:= $(COBJS) $(AOBJS)
# +[/Files]
# [/Variables]

all:				$(NAME)

asm:				$(CASMS)

$(NAME):			$(BINDIR)/kernel
	@$(BEG) "Grub" "Generating boot disk..."
	@mkdir -p iso/boot/grub
	@cp boot/grub/grub.cfg iso/boot/grub
	@cp $(BINDIR)/kernel iso/boot
	@$(GRUB_MKRESCUE) -o $@ iso > /dev/null 2> /dev/null
	@$(RM) $(RMFLAGS) iso
	@$(END) "Grub" "Boot disk generated."

$(BINDIR)/kernel:	$(OBJS)
	@$(BEG) "LD" "Linking object files..."
	@$(LD) $(LDFLAGS) -T src/kernel.ld -m elf_i386 -Map $(BINDIR)/kernel.map -o $@ $^
	@$(END) "LD" "Linked object files."

%.o:				%.c
	@$(BEG) "CC" "`printf "Compiling  : %-25s -> %s" "$^" "$@"`"
	@$(CC) $(CCFLAGS) -o $@ $^ $(ERRORS)
	@$(END) "CC" "`printf "Compiled   : %-25s -> %s" "$^" "$@"`"

%.o:				%.s
	@$(BEG) "AS" "`printf "Assembling : %-25s -> %s" "$^" "$@"`"
	@$(AS) $(ASFLAGS) -f elf -o $@ $^
	@$(END) "AS" "`printf "Assembled  : %-25s -> %s" "$^" "$@"`"

%.s:				%.c
	@$(BEG) "CC" "`printf "Generating : %-25s -> %s" "$^" "$@"`"
	@$(CC) $(CAFLAGS) -o $@ $^
	@$(END) "CC" "`printf "Generated  : %-25s -> %s" "$^" "$@"`"

clean-asm:
	@$(BEGRM) "RM" "Removing assembly files..."
	@$(RM) $(RMFLAGS) $(CASMS)
	@$(ENDRM) "RM" "Removed assembly files."

clean:				clean-asm
	@$(BEGRM) "RM" "Removing object files..."
	@$(RM) $(RMFLAGS) $(OBJS)
	@$(ENDRM) "RM" "Removed object files."
	@$(BEGRM) "RM" "Removing executables..."
	@$(RM) $(RMFLAGS) $(BINDIR)/kernel $(NAME)
	@$(ENDRM) "RM" "Removed executables."

re:					clean all

re-asm:				clean-asm asm

run-qemu:			$(NAME)
	$(QEMU) $(QEMUARGS) -cdrom $(NAME)

.PHONY:				all clean-asm clean re re-asm
